;; The deps.edn file describes the information needed to build a classpath.

;; https://clojure.org/guides/deps_and_cli
;; https://clojure.org/reference/deps_and_cli
;;
;; When using the `clojure` or `clj` script, there are several deps.edn files
;; that are combined:
;; - install-level
;; - user level (this file)
;; - project level (current directory when invoked)
;;
;; For all attributes other than :paths, these config files are merged left to right.
;; Only the last :paths is kept and others are dropped.

{
  ;; Paths
  ;;   Directories in the current project to include in the classpath

  :paths ["src" ;;clj, cljc and cljs files
          "resources" ;;public dir for server and config files
          "assets" ;;scss stylesheets and js scripts
         ]

  ;; External dependencies

 :deps {org.clojure/clojure    {:mvn/version "1.10.0"}

        ring/ring-core {:mvn/version "1.7.1"}
        ;; ring/ring-defaults {:mvn/version "0.3.2"}
        ;; ring-middleware-format {:mvn/version "0.7.3"}

        ;; ;; com.taoensso/encore      {:mvn/version "2.96.0"}
        http-kit {:mvn/version "2.3.0"}
        clj-time               {:mvn/version "0.15.1"}

        com.taoensso/timbre {:mvn/version "4.10.0"}

        ;;TODO: Using a (private?) git repo seems to not go down well with capsule task
        ;; ERROR | Error while creating a jar file: Some of dependecies have no :mvn/version assigned!
        ;;Perhaps it's needs a deps.edn?
        ;; github-digitalechecklisten/dc-util
        ;;  {:git/url "git@github.com:digitalechecklisten/dc-util" :sha "f85c83b54059dbb43ad3a87d6771d5cf9964ae39"}

        org.clojure/tools.deps.alpha {:mvn/version "0.6.480"
                                      ;;tools.deps includes this nop, which
                                      ;;creates multiple bindings for slf4j if
                                      ;;you include another binding like logback-classic
                                      :exclusions [org.slf4j/slf4j-nop]}



        sablono {:mvn/version "0.8.4"}  ; Optional, just for HTML
        ;; cljsjs/material-ui {:mvn/version "0.19.4-0"}

        ;;TODO: either include this here, or remove weasel require from prod code.
        weasel {:mvn/version "0.7.0"}
        }

  ;; Aliases
    ;;   resolve-deps aliases (-R) affect dependency resolution, options:
	;;     :extra-deps - specifies extra deps to add to :deps
	;;     :override-deps - specifies a coordinate to use instead of that in :deps
	;;     :default-deps - specifies a coordinate to use for a lib if one isn't found
	;;   make-classpath aliases (-C) affect the classpath generation, options:
	;;     :extra-paths - vector of additional paths to add to the classpath
	;;     :classpath-overrides - map of lib to path that overrides the result of resolving deps

 :aliases {
           ;; :revolt {:extra-deps  {defunkt/revolt {:mvn/version "1.2.0"}}
           ;;          :extra-paths ["target/assets" "src-dev"]
           ;;          :main-opts   ["-m" "revolt.bootstrap"
           ;;                        "-c" "revolt.edn"]}
           :revolt {:extra-deps {
                                 ;;Revolt -------------------
                                 ;;Adapted revolt that lets us call revolt/bootstrap from our own revolt-bootstrap ns
                                 github-michieljoris/revolt {:git/url "https://github.com/Michieljoris/revolt.git"
                                                             :sha "221966a7122a2cd24f55c05a9c91b276191bee04"}
                                 ;; revolt {:local/root "/home/mj/src/clojure/revolt"}

                                 ;;extra plugins and tasks for revolt:
                                 github-michieljoris/revolt-extra {:git/url "https://github.com/Michieljoris/revolt-extra.git"
                                                                   :sha "9e8c38ad99051bd9c4fdab103317ac2aafd753e9"}
                                 ;; revolt-extra {:local/root "/home/mj/src/clojure/revolt-extra"}
                                 }}
           :nrepl {:extra-deps {
                                
                               ;; nrepl -------------------
                               com.cemerick/pomegranate {:mvn/version "1.1.0"}
                               cider/cider-nrepl {:mvn/version "0.20.0"}
                               refactor-nrepl {:mvn/version "2.4.0"}

                                }}

           :dev {:extra-deps  {
                               ;; dev tools-----------------------
                               com.bhauman/figwheel-main {:mvn/version "0.2.0"}
                               cider/piggieback {:mvn/version "0.3.10"}
                               weasel {:mvn/version "0.7.0"}
                               binaryage/devtools {:mvn/version "0.9.10"}

                               }
                    ;;This is where compiled assets suc as cljs and scss go. So for
                    ;;the server to find them target/assets needs to be added to the
                    ;;classpath:
                    :extra-paths ["target/assets"
                                  "src-dev"
                                  "test"]
                    :main-opts   ["-m" "revolt-bootstrap" ;;Note the hyphen
                                  "-c" "revolt.edn"]}

           ;; :revolt-plugins {:extra-deps {revolt-plugins {:local/root "/home/mj/src/clojure/playground/revolt-plugins"}}
           ;;                  ;; :main-opts ["-m" "nrepl2"]
           ;;                  }
           :cljs {:extra-deps  {org.clojure/clojurescript {:mvn/version "1.10.439"}}}

           :slf4j {:extra-deps {
                                ;;This lib reroutes slf4j log output to timbre. To use this and
                                ;;configure it in time probably need to add/make a task for revolt that
                                ;;sets the level early enough. Setting it on cmd doesn't seem to work:
                                ;;export TIMBRE_LEVEL=:info
                                ;;com.fzakaria/slf4j-timbre {:mvn/version "0.3.12"}
                                ;;This uses config in resources/logback.xml
                                ch.qos.logback/logback-classic {:mvn/version "1.2.3"}
                                }}

           ;; dependencies for packaging tasks
           :pack {:extra-deps {co.paralleluniverse/capsule {:mvn/version "1.0.3"}
                               co.paralleluniverse/capsule-maven {:mvn/version "1.0.3"}}
                  :main-opts   ["-m" "revolt.bootstrap"
                                "-c" "revolt.edn"]}




           :cambada {:extra-deps
                     {luchiniatwork/cambada
                      {:mvn/version "1.0.0"}}}

           :uberjar {:extra-deps
                     {luchiniatwork/cambada {:mvn/version "1.0.0"}}
                     :main-opts ["-m" "cambada.uberjar"
                                 "-m" "core"
                                 "--app-version" "0.1.0"
                                 ]}
           :native-image {:extra-deps
                          {luchiniatwork/cambada {:mvn/version "1.0.0"}}
                          :main-opts ["-m" "cambada.native-image"
                                      "-m" "core"]}

           ;; :deps {:extra-deps {org.clojure/tools.deps.alpha {:mvn/version "0.6.480"}}}
           ;; :test {:extra-paths ["test"]}
           }

  ;; Provider attributes

  ;; :mvn/repos {
  ;;   "central" {:url "https://repo1.maven.org/maven2/"}
  ;;   "clojars" {:url "https://repo.clojars.org/"}
  ;; }
}
